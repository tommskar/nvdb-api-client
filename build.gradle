plugins {
    id 'com.github.ben-manes.versions' version '0.21.0'
    id 'org.ajoberstar.grgit' version '4.1.0'
    id 'pl.allegro.tech.build.axion-release' version '1.9.3'  // do not update past 2 due to SSH errors on windows.
    id 'java-library'
    id 'maven-publish'
    id 'distribution'
}

apply from: "gradle/repositories.gradle"
apply from: "gradle/tasks.gradle"
apply from: "gradle/versioning.gradle"
apply from: "gradle/git.gradle"
apply from: "gradle/publish.gradle"

group = "no.vegvesen.nvdb"
archivesBaseName = "nvdb-read-api-v3-jakarta-client"

dependencies {
    api "com.google.code.gson:gson:2.8.6"
    api "org.slf4j:slf4j-api:1.7.25"

    implementation "jakarta.activation:jakarta.activation-api:1.2.2"
    implementation "org.glassfish.jersey.core:jersey-client:3.0.2"
    implementation "org.glassfish.jersey.connectors:jersey-apache-connector:3.0.2"
    implementation "org.glassfish.jersey.inject:jersey-hk2:3.0.2"
    api "io.projectreactor:reactor-core:3.2.6.RELEASE"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "com.github.tomakehurst:wiremock-jre8:2.26.0"
    testRuntimeOnly "org.slf4j:slf4j-simple:1.7.25"
}

test {
    useJUnitPlatform()
}

jar {
    manifest.attributes "Created-By": rootProject.getProperty("build.vendor")
    manifest.attributes "Implementation-Title": 'nvdb-api-client'
    manifest.attributes "Implementation-Version": project.version
}

artifacts {
    archives sourceJar
    archives javadocJar
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
